/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.financeiro.frmCompromissos;

import com.mycompany.financeiro.dao.compromissos;
import com.mycompany.financeiro.dao.fornecedores;
import com.mycompany.financeiro.dao.tipodespesa;
import com.mycompany.financeiro.dao.utilidades.conexao;
import java.awt.Color;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author luiz
 */
public class frmCompromisso extends javax.swing.JFrame {
    public ResultSet rsCompromissos,  rsFornecedor, rstipoDespesa;
    public String SQL;
    public int posicaoCompromissos=0,posicaoFornecedor=0,posicaoTipoDespesa=0,posicaoUltimoCompromisso=0,IdUltimoCompromisso=0;
    public List<compromissos> compromissos = new ArrayList<>();
    public List<fornecedores> fornecedores = new ArrayList<>();
    public List<tipodespesa> tipoDespesa = new ArrayList<>();
    public boolean modoEdicao=false;
    public boolean modoNovo=false;
    public boolean cb_TipoDespesaControle=false;
    public boolean cb_FornecedorControle=false;
    
    /**
     * Creates new form frmCompromisso
     */
    public frmCompromisso() {
        initComponents();
        limparCamposCompromisso();
        travarCamposCompromisso();
        mostrarCompromissos(carregarCompromissos());
        carregarFornecedor();
        carregarTipoDespesa();
        pesquisaNomeFornecedorporID(posicaoFornecedor);
        pesquisaNomeTipoDespesaporID(posicaoTipoDespesa);
        btn_salvar.setEnabled(false);
        btn_gravarmodificacao.setEnabled(false);
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoTipoDívida = new javax.swing.ButtonGroup();
        DescritivoDoFormulário = new javax.swing.JLabel();
        lbl_Id = new javax.swing.JLabel();
        tf_Id = new javax.swing.JTextField();
        lbl_DataCadastro = new javax.swing.JLabel();
        tf_dataCadastro = new javax.swing.JTextField();
        lbl_tipodivida = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rb_boleto = new javax.swing.JRadioButton();
        rb_cheque = new javax.swing.JRadioButton();
        lbl_ncheque = new javax.swing.JLabel();
        tf_ncheque = new javax.swing.JTextField();
        lbl_dataVencimento = new javax.swing.JLabel();
        tf_dataVencimento = new javax.swing.JTextField();
        lbl_valor = new javax.swing.JLabel();
        tf_valor = new javax.swing.JTextField();
        lbl_dataPagamento = new javax.swing.JLabel();
        tf_dataPagamento = new javax.swing.JTextField();
        lbl_Fornecedor = new javax.swing.JLabel();
        tf_fornecedor = new javax.swing.JTextField();
        cb_fornecedor = new javax.swing.JComboBox<>();
        lbl_documento = new javax.swing.JLabel();
        tf_documento = new javax.swing.JTextField();
        lbl_parcela = new javax.swing.JLabel();
        tf_parcela = new javax.swing.JTextField();
        lbl_codigodeBarras = new javax.swing.JLabel();
        tf_codigodeBarras = new javax.swing.JTextField();
        lbl_observacao = new javax.swing.JLabel();
        sp_observacao = new javax.swing.JScrollPane();
        ta_observacao = new javax.swing.JTextArea();
        lbl_tipoDespesa = new javax.swing.JLabel();
        tf_tipoDespesa = new javax.swing.JTextField();
        cb_tipoDespesa = new javax.swing.JComboBox<>();
        lbl_pagamentoEfetuado = new javax.swing.JLabel();
        chb_pagamentoEfetuado = new javax.swing.JCheckBox();
        btn_novo = new javax.swing.JButton();
        btn_salvar = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        btn_gravarmodificacao = new javax.swing.JButton();
        btn_sair = new javax.swing.JButton();
        btn_Primeiro = new javax.swing.JButton();
        btn_Anterior = new javax.swing.JButton();
        btn_Próximo = new javax.swing.JButton();
        btn_Último = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        DescritivoDoFormulário.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        DescritivoDoFormulário.setForeground(new java.awt.Color(255, 0, 0));
        DescritivoDoFormulário.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DescritivoDoFormulário.setText("Compromissos");
        DescritivoDoFormulário.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lbl_Id.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_Id.setText("Id:");

        tf_Id.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_Id.setText("jTextField1");

        lbl_DataCadastro.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_DataCadastro.setText("Data Cadastro:");

        tf_dataCadastro.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_dataCadastro.setText("jTextField1");

        lbl_tipodivida.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_tipodivida.setText("Tipo:");

        jPanel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPanel1FocusLost(evt);
            }
        });

        GrupoTipoDívida.add(rb_boleto);
        rb_boleto.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        rb_boleto.setMnemonic('b');
        rb_boleto.setText("Boleto");
        rb_boleto.setAlignmentY(0.0F);
        rb_boleto.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        rb_boleto.setMaximumSize(new java.awt.Dimension(100, 41));
        rb_boleto.setMinimumSize(new java.awt.Dimension(100, 41));
        rb_boleto.setPreferredSize(new java.awt.Dimension(80, 29));
        rb_boleto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rb_boleto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rb_boletoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rb_boletoFocusLost(evt);
            }
        });
        rb_boleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_boletoActionPerformed(evt);
            }
        });

        GrupoTipoDívida.add(rb_cheque);
        rb_cheque.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        rb_cheque.setMnemonic('c');
        rb_cheque.setText("Cheque");
        rb_cheque.setAlignmentY(0.0F);
        rb_cheque.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        rb_cheque.setMaximumSize(new java.awt.Dimension(100, 41));
        rb_cheque.setMinimumSize(new java.awt.Dimension(100, 41));
        rb_cheque.setPreferredSize(new java.awt.Dimension(80, 29));
        rb_cheque.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rb_cheque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rb_chequeFocusLost(evt);
            }
        });
        rb_cheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_chequeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rb_boleto, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb_cheque, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rb_cheque, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_boleto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbl_ncheque.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_ncheque.setText("Nº Cheque:");
        lbl_ncheque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lbl_nchequeFocusGained(evt);
            }
        });

        tf_ncheque.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_ncheque.setText("jTextField1");
        tf_ncheque.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tf_ncheque.setMinimumSize(new java.awt.Dimension(70, 26));
        tf_ncheque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_nchequeFocusLost(evt);
            }
        });
        tf_ncheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_nchequeActionPerformed(evt);
            }
        });

        lbl_dataVencimento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_dataVencimento.setText("Data Vencimento:");

        tf_dataVencimento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_dataVencimento.setText("jTextField1");
        tf_dataVencimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_dataVencimentoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_dataVencimentoFocusLost(evt);
            }
        });
        tf_dataVencimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_dataVencimentoActionPerformed(evt);
            }
        });

        lbl_valor.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_valor.setText("Valor:");

        tf_valor.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_valor.setText("jTextField1");
        tf_valor.setAutoscrolls(false);
        tf_valor.setMinimumSize(new java.awt.Dimension(120, 39));
        tf_valor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_valorFocusLost(evt);
            }
        });
        tf_valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_valorActionPerformed(evt);
            }
        });

        lbl_dataPagamento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_dataPagamento.setText("Data Pagamento:");

        tf_dataPagamento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_dataPagamento.setText("jTextField1");
        tf_dataPagamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_dataPagamentoFocusLost(evt);
            }
        });

        lbl_Fornecedor.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_Fornecedor.setText("Fornecedor:");

        tf_fornecedor.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_fornecedor.setText("jTextField1");
        tf_fornecedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_fornecedorFocusLost(evt);
            }
        });
        tf_fornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_fornecedorActionPerformed(evt);
            }
        });

        cb_fornecedor.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        cb_fornecedor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_fornecedorItemStateChanged(evt);
            }
        });
        cb_fornecedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cb_fornecedorFocusLost(evt);
            }
        });

        lbl_documento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_documento.setText("Documento:");
        lbl_documento.setToolTipText("Número do pedido ou nota fiscal que gerou a dívida");

        tf_documento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_documento.setText("jTextField1");
        tf_documento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_documentoFocusLost(evt);
            }
        });

        lbl_parcela.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_parcela.setText("Parcela:");

        tf_parcela.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_parcela.setText("jTextField1");
        tf_parcela.setToolTipText("número da parcela do boleto caso existam várias parcelas relacionadas à mesma nota fiscal ou pedido");
        tf_parcela.setMinimumSize(new java.awt.Dimension(30, 26));
        tf_parcela.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_parcelaFocusLost(evt);
            }
        });

        lbl_codigodeBarras.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_codigodeBarras.setText("Código de barras:");

        tf_codigodeBarras.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_codigodeBarras.setText("jTextField1");
        tf_codigodeBarras.setToolTipText("Digite ou digitalize o código de barras do boleto se puder");
        tf_codigodeBarras.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_codigodeBarrasFocusLost(evt);
            }
        });
        tf_codigodeBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_codigodeBarrasActionPerformed(evt);
            }
        });

        lbl_observacao.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_observacao.setText("Observações:");

        ta_observacao.setColumns(20);
        ta_observacao.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        ta_observacao.setRows(5);
        ta_observacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ta_observacaoFocusLost(evt);
            }
        });
        sp_observacao.setViewportView(ta_observacao);

        lbl_tipoDespesa.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_tipoDespesa.setText("Tipo de Despesa:");

        tf_tipoDespesa.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_tipoDespesa.setText("jTextField1");
        tf_tipoDespesa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_tipoDespesaFocusLost(evt);
            }
        });

        cb_tipoDespesa.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        cb_tipoDespesa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_tipoDespesaItemStateChanged(evt);
            }
        });
        cb_tipoDespesa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cb_tipoDespesaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cb_tipoDespesaFocusLost(evt);
            }
        });
        cb_tipoDespesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipoDespesaActionPerformed(evt);
            }
        });

        lbl_pagamentoEfetuado.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_pagamentoEfetuado.setText("Pagamento efetuado:");

        chb_pagamentoEfetuado.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        chb_pagamentoEfetuado.setText("SIM");

        btn_novo.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        btn_novo.setMnemonic('N');
        btn_novo.setText("Novo");
        btn_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_novoActionPerformed(evt);
            }
        });

        btn_salvar.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        btn_salvar.setMnemonic('s');
        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        btn_editar.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        btn_editar.setMnemonic('e');
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_gravarmodificacao.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        btn_gravarmodificacao.setMnemonic('g');
        btn_gravarmodificacao.setText("Gravar Modificações");
        btn_gravarmodificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gravarmodificacaoActionPerformed(evt);
            }
        });

        btn_sair.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        btn_sair.setMnemonic('i');
        btn_sair.setText("Sair");
        btn_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sairActionPerformed(evt);
            }
        });

        btn_Primeiro.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        btn_Primeiro.setMnemonic('p');
        btn_Primeiro.setText("Primeiro");
        btn_Primeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PrimeiroActionPerformed(evt);
            }
        });

        btn_Anterior.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        btn_Anterior.setMnemonic('a');
        btn_Anterior.setText("Anterior");
        btn_Anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AnteriorActionPerformed(evt);
            }
        });

        btn_Próximo.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        btn_Próximo.setMnemonic('r');
        btn_Próximo.setText("Próximo");
        btn_Próximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PróximoActionPerformed(evt);
            }
        });

        btn_Último.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        btn_Último.setMnemonic('u');
        btn_Último.setText("Último");
        btn_Último.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ÚltimoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DescritivoDoFormulário, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_novo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_salvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_editar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_gravarmodificacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_sair)
                        .addGap(140, 140, 140))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sp_observacao, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_observacao)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lbl_documento)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_documento, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lbl_codigodeBarras)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_codigodeBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_dataPagamento)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tf_dataPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_Fornecedor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cb_fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_pagamentoEfetuado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chb_pagamentoEfetuado))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_tipoDespesa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_tipoDespesa, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cb_tipoDespesa, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(179, 179, 179)
                                .addComponent(btn_Primeiro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_Anterior)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_Próximo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_Último))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbl_parcela)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tf_parcela, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lbl_dataVencimento)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tf_dataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lbl_valor)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lbl_Id)
                                    .addGap(18, 18, 18)
                                    .addComponent(tf_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lbl_DataCadastro)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tf_dataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lbl_tipodivida)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(3, 3, 3)
                                    .addComponent(lbl_ncheque)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tf_ncheque, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(DescritivoDoFormulário)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_Id)
                                .addComponent(tf_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_DataCadastro)
                                .addComponent(tf_dataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_tipodivida))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_ncheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_ncheque))))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_dataPagamento)
                        .addComponent(tf_dataPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_valor)
                        .addComponent(lbl_dataVencimento)
                        .addComponent(tf_dataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Fornecedor)
                    .addComponent(cb_fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_documento)
                    .addComponent(tf_documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_parcela)
                    .addComponent(tf_parcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_codigodeBarras)
                    .addComponent(tf_codigodeBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_observacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sp_observacao, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tipoDespesa)
                    .addComponent(tf_tipoDespesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_tipoDespesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_pagamentoEfetuado)
                    .addComponent(chb_pagamentoEfetuado))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_novo)
                    .addComponent(btn_salvar)
                    .addComponent(btn_editar)
                    .addComponent(btn_sair)
                    .addComponent(btn_gravarmodificacao))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Primeiro)
                    .addComponent(btn_Anterior)
                    .addComponent(btn_Próximo)
                    .addComponent(btn_Último))
                .addGap(92, 92, 92))
        );

        tf_fornecedor.getAccessibleContext().setAccessibleName("dt_fornecedor");
        cb_fornecedor.getAccessibleContext().setAccessibleName("cb_fornecedor");

        setSize(new java.awt.Dimension(813, 626));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_novoActionPerformed
    
    modoNovo=true;
    modoEdicao=false;
    btn_novo.setEnabled(false);
    chb_pagamentoEfetuado.setSelected(false);
    limparCamposCompromisso();
    liberarCamposCompromisso();
    tf_Id.setText(String.valueOf(pegaultimoIdCompromisso()));
    tf_dataCadastro.setText(LocalDate.now().format(DateTimeFormatter.ofPattern("dd/MM/YYYY")));
    btn_salvar.setEnabled(false);
    btn_editar.setEnabled(false);
    btn_gravarmodificacao.setEnabled(false);
    GrupoTipoDívida.clearSelection();
    
    rb_boleto.setToolTipText("Defina se é um boleto ou cheque");
    rb_boleto.requestFocus();
  
    }//GEN-LAST:event_btn_novoActionPerformed

    private void btn_PrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PrimeiroActionPerformed
      posicaoCompromissos=0;
      carregarCompromissos();
      mostrarCompromissos(compromissos);
      travarCamposCompromisso();
      btn_editar.setEnabled(true);
      btn_novo.setEnabled(true);
    }//GEN-LAST:event_btn_PrimeiroActionPerformed

    private void btn_AnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AnteriorActionPerformed
    if (posicaoCompromissos>0)
        {
        posicaoCompromissos=posicaoCompromissos-1;
        carregarCompromissos();
        mostrarCompromissos(compromissos);
        travarCamposCompromisso();
        btn_editar.setEnabled(true);
        btn_novo.setEnabled(true);
        }
    
    }//GEN-LAST:event_btn_AnteriorActionPerformed

    private void btn_PróximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PróximoActionPerformed
    if (posicaoCompromissos<compromissos.size()-1)
        {
        posicaoCompromissos=posicaoCompromissos+1;
        carregarCompromissos();
        mostrarCompromissos(compromissos);
        travarCamposCompromisso();
        btn_editar.setEnabled(true);
        btn_novo.setEnabled(true);
        }
    }//GEN-LAST:event_btn_PróximoActionPerformed

    private void btn_ÚltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ÚltimoActionPerformed
    posicaoCompromissos=compromissos.size()-1;
    carregarCompromissos();
    mostrarCompromissos(compromissos);
    travarCamposCompromisso();
    btn_editar.setEnabled(true);
    btn_novo.setEnabled(true);
    }//GEN-LAST:event_btn_ÚltimoActionPerformed

    private void tf_fornecedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_fornecedorFocusLost
    
    //if(!tf_fornecedor.getText().isEmpty())
    if(tf_fornecedor.getText()!=null || !"".equals(tf_fornecedor.getText()))
    {
    carregarFornecedor();    
    posicaoFornecedor=0;
    for (int i=0; i<=fornecedores.size()-1;i++)
        {
            if (fornecedores.get(posicaoFornecedor).getIdFornecedor()==Integer.valueOf(tf_fornecedor.getText()))
            {
                cb_fornecedor.setSelectedIndex(posicaoFornecedor);            
            }
            else
            {
            posicaoFornecedor=posicaoFornecedor+1;
            }
        }
    }
    else
     {JOptionPane.showMessageDialog(null, "Escolha um fornecedor da lista");
     cb_fornecedor.requestFocus();
             }
    
    
    }//GEN-LAST:event_tf_fornecedorFocusLost

    private void cb_fornecedorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_fornecedorItemStateChanged
    if("".equals(cb_fornecedor.getSelectedItem())||cb_fornecedor.getSelectedItem()==null)
            {
            //System.out.print("\nCb+fornecedor vazio");
            }
    else
    {
        posicaoFornecedor=0;
    
    for (int i=0; i<=fornecedores.size()-1;i++)
        {
            ////System.out.print("\n ->combo fornecedor:"+cb_fornecedor.getSelectedItem().toString());
            if (fornecedores.get(posicaoFornecedor).getNomeFornecedor().equals(cb_fornecedor.getSelectedItem().toString()))
            {
                tf_fornecedor.setText(String.valueOf(fornecedores.get(posicaoFornecedor).getIdFornecedor()));
            }
            else
            {
            posicaoFornecedor=posicaoFornecedor+1;
            ////System.out.print("\nPassando...");
            }
        }
    }
    }//GEN-LAST:event_cb_fornecedorItemStateChanged

    private void tf_fornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_fornecedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_fornecedorActionPerformed

    private void tf_tipoDespesaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_tipoDespesaFocusLost
        //if (!tf_tipoDespesa.getText().isEmpty())
        if(tf_tipoDespesa.getText() !=null || !"".equals(tf_tipoDespesa.getText()))
        {
        carregarTipoDespesa();
    posicaoTipoDespesa=0;
    for (int i=0; i<=tipoDespesa.size()-1;i++)
        {
            if (tipoDespesa.get(posicaoTipoDespesa).getIdTipoDespesa()==Integer.valueOf(tf_tipoDespesa.getText()))
            {
                cb_tipoDespesa.setSelectedIndex(posicaoTipoDespesa);            
            }
            else
            {
            posicaoTipoDespesa=posicaoTipoDespesa+1;
            }
        }
        }
    }//GEN-LAST:event_tf_tipoDespesaFocusLost

    private void cb_tipoDespesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipoDespesaActionPerformed
 posicaoTipoDespesa=0;
    for (int i=0; i<=tipoDespesa.size()-1;i++)
        {
         ////System.out.print("\n->combo Despesa:"+cb_tipoDespesa.getSelectedItem().toString());   
            if (tipoDespesa.get(posicaoTipoDespesa).getNomeDespesa().equals(cb_tipoDespesa.getSelectedItem().toString()))
            {
                tf_tipoDespesa.setText(String.valueOf(tipoDespesa.get(posicaoTipoDespesa).getIdTipoDespesa()));
            }
            else
            {
            posicaoTipoDespesa=posicaoTipoDespesa+1;
            ////System.out.print("\nPassando CB TIPO DESPESA...");
            }
        }
    }//GEN-LAST:event_cb_tipoDespesaActionPerformed

    private void cb_tipoDespesaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_tipoDespesaItemStateChanged
    posicaoTipoDespesa=0;
    for (int i=0; i<=tipoDespesa.size()-1;i++)
        {
         ////System.out.print("\n->combo Despesa:"+cb_tipoDespesa.getSelectedItem().toString());   
            if (tipoDespesa.get(posicaoTipoDespesa).getNomeDespesa().equals(cb_tipoDespesa.getSelectedItem().toString()))
            {
                tf_tipoDespesa.setText(String.valueOf(tipoDespesa.get(posicaoTipoDespesa).getIdTipoDespesa()));
            }
            else
            {
            posicaoTipoDespesa=posicaoTipoDespesa+1;
            ////System.out.print("\nPassando CB TIPO DESPESA...");
            }
        }
    }//GEN-LAST:event_cb_tipoDespesaItemStateChanged

    private void tf_valorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_valorActionPerformed
     
    }//GEN-LAST:event_tf_valorActionPerformed

    private void tf_valorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_valorFocusLost

    String strvalor = (tf_valor.getText());
    //System.out.print("\nStrvalor"+strvalor);
    //if (strvalor==null)
    //System.out.print("\nNulo!");
    //if (strvalor.isEmpty())
    //System.out.print("\nVazio");    
    //if(strvalor.isBlank())
    //System.out.print("\nEmbranco!");
    
     
    //if (!"".equals(strvalor)&&!(strvalor==null)&&Pattern.matches("^([1-9]{1}[\\d]{0,2}(\\.[\\d]{3})*(\\,[\\d]{0,2})?|[1-9]{1}[\\d]{0,}(\\,[\\d]{0,2})?|0(\\,[\\d]{0,2})?|(\\,[\\d]{1,2})?)$",strvalor))
    if (!strvalor.equals(""))
    {
    if (Pattern.matches("(\\d{1,5}.)?\\d{1,3}?\\d{0,2}$|(\\d{1,5},)?\\d{1,3}.\\d{0,2}$",strvalor))
     {
        // System.out.print("\nNão é vazio e o padrao é numerico");
         strvalor= strvalor.replace(",",".");
         tf_valor.setText(strvalor);
            //aprovou o valor, agora vamos redirecionar o usuario para o cb_fornecedor caso seja um novo registro
            //ou para o dataPagamento caso seja edicao
            //if(tf_dataPagamento==null||"".equals(tf_dataPagamento.getText()))
            //se for o caso de registro novo, vamos para o fornecedor, pulando o datapagamento   
            //System.out.print("\n ModoNovo: "+modoNovo);
            //System.out.print("\n ModoEdicao: "+modoEdicao);
            if(modoNovo)
              {
                //System.out.print("\nRegistro novo");
                    tf_fornecedor.setEnabled(true);
                    tf_fornecedor.setEditable(true);
                    //cb_fornecedor.setEditable(true);
                    cb_fornecedor.setEnabled(true);
                    cb_fornecedor.requestFocus();
                        if (tf_fornecedor.getText()==null||"".equals(tf_fornecedor.getText()))
                            //se nao foi escolhido fornecedor, faca escolher um
                                {
                                    if (cb_FornecedorControle==false)                     
                                    {cb_fornecedor.addItem("Selecione aqui o fornecedor");
                                    cb_FornecedorControle=true;}
                                    
                                    cb_fornecedor.setSelectedItem("Selecione aqui o fornecedor");
                                }
                        else
                            //se ja tiver, busque qual foi
                                {
                                    pesquisaNomeFornecedorporID(Integer.valueOf(tf_fornecedor.getText()));
                                }
               } 
            else if(modoEdicao)
            //caso seja registro existente, em edicao:
                {
                //System.out.println("\nRegistro em edição");
                            
                    tf_dataPagamento.setEnabled(true);
                    tf_dataPagamento.setEditable(true);
                    tf_dataPagamento.requestFocus();
                }
     }
     else
     {
            JOptionPane.showMessageDialog(null,"Há problema no valor digitado no campo de valor, refaça com atenção!");
            //tf_valor.setText("");
            tf_valor.requestFocus();
     }
    }else
    {
               tf_dataPagamento.setEnabled(true);
                    tf_dataPagamento.setEditable(true);
                    tf_dataPagamento.requestFocus();
    }
    }//GEN-LAST:event_tf_valorFocusLost

    private void tf_dataVencimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_dataVencimentoFocusLost
        String DataVencimento = tf_dataVencimento.getText();
        
        
        if (!DataVencimento.equals("")&&!Pattern.matches("(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[012])/((?:19|20)[0-9][0-9])", DataVencimento))
        {
            JOptionPane.showMessageDialog(null,"Há problema no valor digitado no campo de Data de Vencimento, refaça com atenção!");
            tf_dataVencimento.setText("");
            tf_dataVencimento.requestFocus();
        }else
        {
        tf_valor.setEnabled(true);
        tf_valor.setEditable(true);
        tf_valor.requestFocus();
        }
        
        
    }//GEN-LAST:event_tf_dataVencimentoFocusLost

    private void tf_dataPagamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_dataPagamentoFocusLost
    String DataPagamento = tf_dataPagamento.getText();
        if (!(DataPagamento==null||"".equals(DataPagamento))&&!Pattern.matches("(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[012])/((?:19|20)[0-9][0-9])", DataPagamento))
        {
            JOptionPane.showMessageDialog(null,"Há problema no valor digitado no campo de Data de Pagamento, refaça com atenção!");
            tf_dataPagamento.setText("");
            tf_dataPagamento.requestFocus();
        }
        else
        {
            tf_fornecedor.setEnabled(true);
            tf_fornecedor.setEditable(true);
            //cb_fornecedor.setEditable(true);
            cb_fornecedor.setEnabled(true);
            cb_fornecedor.requestFocus();
                if (tf_fornecedor.getText()==null||"".equals(tf_fornecedor.getText()))
                        {
                            if (cb_FornecedorControle==false){
                            cb_fornecedor.addItem("Selecione aqui o fornecedor");
                            cb_FornecedorControle=true;}
                            cb_fornecedor.setSelectedItem("Selecione aqui o fornecedor");
                        }
                else
                {
                    pesquisaNomeFornecedorporID(Integer.valueOf(tf_fornecedor.getText()));
                }
        }
    }//GEN-LAST:event_tf_dataPagamentoFocusLost

    private void rb_boletoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rb_boletoFocusLost
rb_boleto.setBackground(Color.lightGray);    }//GEN-LAST:event_rb_boletoFocusLost

    private void rb_chequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_chequeActionPerformed
         tf_ncheque.setEnabled(true);
         tf_ncheque.setEditable(true);
         tf_ncheque.requestFocus();
    }//GEN-LAST:event_rb_chequeActionPerformed

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
    
    //definir qual o estado de tipodivida ->
    boolean bolTipoDivida=false;
    if(rb_boleto.isSelected())
        bolTipoDivida= false; //false para boleto
    if(rb_cheque.isSelected())    
        bolTipoDivida=true; //true para cheques
    
    conexao con  = new conexao();
    con.conecta();
    String strncheque= tf_ncheque.getText().trim();
    //if (!(tf_ncheque.getText()==null))
    if (!("".equals(strncheque))&&!(strncheque==null))
        {
            //System.out.print("\nEstou no botao salvar - o tf_cheque não é vazio, vou pesquisar para saber se existe já o registro ncheque "+tf_ncheque.getText());
             if (!pesquisarCheque())
                    {    
                  if(checaCamposPraGravar())
                  {
                  SQL=("insert into compromissos (idCompromisso,TipoDivida,Ncheque,DataCadastro,DataVencimento,Valor,IdFornecedor,Documento,Parcela,CodigoBarras,Observacao,TipoDespesa,DataPagamento,PagamentoEfetuado)"
                  +"values ("
                  +(tf_Id.getText())+","
                  +bolTipoDivida+",'"
                  +tf_ncheque.getText()+"','"
                  +tf_dataCadastro.getText()+"','"
                  +tf_dataVencimento.getText()+"','"
                  +tf_valor.getText()+"',"
                  +(tf_fornecedor.getText())+",'"
                  +tf_documento.getText()+ "','"
                  +tf_parcela.getText()+"','"
                  +tf_codigodeBarras.getText()+"','"
                  +ta_observacao.getText()+"','"
                  +tf_tipoDespesa.getText()+"',"
                  +null+","
                  +false+
                  ")");
                    //System.out.print ("\n"+SQL);
                    con.executaUpdate(SQL);
                    btn_salvar.setEnabled(false);
                    travarCamposCompromisso();
                    mostrarCompromissos(compromissos);
                    btn_editar.setEnabled(true);
                    JOptionPane.showMessageDialog(null, "Registro gravado");
                    modoEdicao=false;
                    modoNovo=false;
            }
            }
             else
                 
             {
             JOptionPane.showMessageDialog(null,"O número do cheque está duplicado. Verifique");
             }   
        }
    else
    {
        if (checaCamposPraGravar())
        {
    SQL=("insert into compromissos (idCompromisso,TipoDivida,Ncheque,DataCadastro,DataVencimento,Valor,IdFornecedor,Documento,Parcela,CodigoBarras,Observacao,TipoDespesa,DataPagamento,PagamentoEfetuado)"
                  +"values ("
                  +(tf_Id.getText())+","
                  +bolTipoDivida+",'"
                  +tf_ncheque.getText()+"','"
                  +tf_dataCadastro.getText()+"','"
                  +tf_dataVencimento.getText()+"','"
                  +tf_valor.getText()+"',"
                  +(tf_fornecedor.getText())+",'"
                  +tf_documento.getText()+ "','"
                  +tf_parcela.getText()+"','"
                  +tf_codigodeBarras.getText()+"','"
                  +ta_observacao.getText()+"','"
                  +tf_tipoDespesa.getText()+"',"
                  +null+","
                  +false+
                  ")");
                    //System.out.print ("\n"+SQL);
                    con.executaUpdate(SQL);
                    btn_salvar.setEnabled(false);
                    btn_novo.setEnabled(true);
                    btn_gravarmodificacao.setEnabled(false);
                    travarCamposCompromisso();
                    mostrarCompromissos(compromissos);
                    JOptionPane.showMessageDialog(null, "Registro gravado");
        }
    }
    
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void btn_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sairActionPerformed
   dispose();
    }//GEN-LAST:event_btn_sairActionPerformed

    
    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
   modoEdicao=true;
   modoNovo=false;
   liberarCamposCompromisso();
   btn_editar.setEnabled(false);
   btn_novo.setEnabled(false);
   btn_gravarmodificacao.setEnabled(true);
   btn_salvar.setEnabled(false);
   rb_boleto.requestFocus();
        
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_gravarmodificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gravarmodificacaoActionPerformed
         boolean bolTipoDivida= false;
    if(rb_boleto.isSelected())
        bolTipoDivida= false; //false para boleto
    if(rb_cheque.isSelected())    
        bolTipoDivida=true; //true para cheques
   
        String strncheque=tf_ncheque.getText().trim();
            if (!"".equals(strncheque)&&!(strncheque==null))
            {
                //System.out.print("\nstrncheque não é vazio");
                
                    if(!pesquisarCheque()){  
                        //System.out.print("\npesquisando o cheque voltou que não é true");
                                                boolean tipoDivida;
                                                    if (rb_boleto.isSelected())
                                                        tipoDivida=false;
                                                    else
                                                        tipoDivida=true;
                                            }
            }
            
            if (checaCamposPraGravar())
            {
                                                SQL = "update compromissos set ";
                                                //if(!(tf_dataPagamento.getText()==null||"".equals(tf_dataPagamento.getText())))
                                                //{
                                                SQL = SQL+"DataPagamento = '"+tf_dataPagamento.getText()+"',";
                                                //}
                                                if (chb_pagamentoEfetuado.isSelected())
                                                {
                                                SQL = SQL +"PagamentoEfetuado = 1, ";
                                                }
                                                else
                                                {
                                                SQL = SQL +"PagamentoEfetuado = 0, ";
                                                }
                                                SQL=SQL+
                                                    "idCompromisso = "+tf_Id.getText()+","+
                                                    "TipoDivida = "+bolTipoDivida+","+
                                                    "DataCadastro = '"+tf_dataCadastro.getText()+"',"+
                                                    "DataVencimento = '"+tf_dataVencimento.getText()+"',"+
                                                    "Valor = '"+tf_valor.getText()+"',"+
                                                    "IdFornecedor ="+tf_fornecedor.getText()+","+
                                                    "Documento = '"+tf_documento.getText()+"',"+
                                                    "Parcela = '"+tf_parcela.getText()+"',"+
                                                    "CodigoBarras = '"+tf_codigodeBarras.getText()+"',"+
                                                    "Observacao = ' "+ta_observacao.getText()+"',"+
                                                    "TipoDespesa = '" +tf_tipoDespesa.getText()+"', "+
                                                    "Ncheque = '" +tf_ncheque.getText()+"' "+
                                                    //datapagamento
                                                    //PagamentoEfetuado
                                                    "where idCompromisso ="+tf_Id.getText();
                                                //System.out.print("\nSQL="+SQL);
                                                conexao con = new conexao();
                                                con.conecta();
                                                con.executaUpdate(SQL);
                                                travarCamposCompromisso();
                                                btn_gravarmodificacao.setEnabled(false);
                                                btn_novo.setEnabled(true);
                                                modoEdicao=false;
                                                modoNovo=false;
                                                JOptionPane.showMessageDialog(null,"Atualizações gravadas");
            }
                
    }//GEN-LAST:event_btn_gravarmodificacaoActionPerformed

    private void rb_boletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_boletoActionPerformed
       tf_dataVencimento.setEnabled(true);
       tf_dataVencimento.setEditable(true);
       tf_dataVencimento.requestFocus();
    }//GEN-LAST:event_rb_boletoActionPerformed

    private boolean checaCamposPraGravar(){
    if(!rb_boleto.isSelected()&&!rb_cheque.isSelected())
    {
    JOptionPane.showMessageDialog(null, "É preciso selecionar o tipo de dívida: boleto ou cheque");
    rb_boleto.requestFocus();
    return false;
    }
    
    if((rb_cheque.isSelected())&&(tf_ncheque.getText()==null||"".equals(tf_ncheque.getText())))
    {
    JOptionPane.showMessageDialog(null, "É preciso digitar o número do cheque");
    tf_ncheque.requestFocus();        
    return false;
    }
    if(tf_dataVencimento.getText()==null||"".equals(tf_dataVencimento.getText()))
    {
    JOptionPane.showMessageDialog(null, "É preciso selecionar a data de vencimento");
    tf_ncheque.requestFocus();        
    return false;
    }
    if(chb_pagamentoEfetuado.isSelected()&&(tf_dataPagamento.getText()==null||"".equals(tf_dataPagamento.getText())))
    {
    JOptionPane.showMessageDialog(null,"O registro está marcado como pago, porém não há data de pagamento registrada");
    tf_dataPagamento.setEnabled(true);
    tf_dataPagamento.setEditable(true);
    tf_dataPagamento.requestFocus();
    return false;
    }
    if(!(chb_pagamentoEfetuado.isSelected())&&(!((tf_dataPagamento.getText()==null)||"".equals(tf_dataPagamento.getText()))))
    {
    JOptionPane.showMessageDialog(null,"O registro tem data de pagamento, porém não está checado com pago");
    chb_pagamentoEfetuado.setEnabled(true);
    chb_pagamentoEfetuado.requestFocus();
    return false;
    }
    
    if(tf_tipoDespesa.getText()==null||"".equals(tf_tipoDespesa.getText()))
    {
    JOptionPane.showMessageDialog(null, "É preciso selecionar o tipo de despesa");
    cb_tipoDespesa.requestFocus();        
    return false;
    }
    
    return true;
    }
    
    private void cb_fornecedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb_fornecedorFocusLost
    
   /* if("".equals(tf_fornecedor.getText())||(tf_fornecedor.getText()==null))
    {
        JOptionPane.showMessageDialog(null, "Atenção: Escolha um fornecedor!");
        cb_fornecedor.requestFocus();
    } 
    else
    */
    
        tf_documento.setEnabled(true);
        tf_documento.setEditable(true);
        tf_documento.requestFocus();
    
    
    }//GEN-LAST:event_cb_fornecedorFocusLost

    private void rb_chequeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rb_chequeFocusLost
         if(rb_boleto.isSelected()||rb_cheque.isSelected())
     {
     ////System.out.print("\n Selecionada opcao de tipo de divida");
     }
     else
     {
            JOptionPane.showMessageDialog(null,"Defina se a dívida é um boleto ou um cheque!");
            rb_boleto.requestFocus();
     }
    }//GEN-LAST:event_rb_chequeFocusLost

    private void tf_dataVencimentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_dataVencimentoFocusGained
    /* if(rb_boleto.isSelected()||rb_cheque.isSelected())
     {
     //System.out.print("\n Selecionada opcao de tipo de divida");
     }
     else
     {
            JOptionPane.showMessageDialog(null,"Defina se a dívida é um boleto ou um cheque!");
            rb_boleto.requestFocus();
     }*/
    }//GEN-LAST:event_tf_dataVencimentoFocusGained

    private void cb_tipoDespesaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb_tipoDespesaFocusLost
/*        //if (tf_tipoDespesa.getText().isBlank())
        String strtipodespesa= tf_tipoDespesa.getText();
        if("".equals(strtipodespesa)||(strtipodespesa==null))
    {
        JOptionPane.showMessageDialog(null, "Atenção: Escolha um tipo de depesa!");
        cb_tipoDespesa.requestFocus();
    }
      */  
        if(modoEdicao){
            chb_pagamentoEfetuado.setEnabled(true);
            chb_pagamentoEfetuado.requestFocus();
        }        
        ////System.out.print("\ncbtipodespesa focus lost - "+cb_tipoDespesa.getSelectedItem().toString());
        ////System.out.print("\n Conteudo de tf_tipodepsesa - "+tf_tipoDespesa.getText());
        if(modoNovo)
        {btn_salvar.setEnabled(true);
        btn_salvar.requestFocus();}
        
    }//GEN-LAST:event_cb_tipoDespesaFocusLost

    private void tf_nchequeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_nchequeFocusLost
    String strncheque=tf_ncheque.getText().trim();
        //if (!tf_ncheque.getText().trim().isBlank()||!tf_ncheque.getText().trim().isEmpty()||!(strncheque==null))
        if(tf_ncheque.getText() !=null || !"".equals(tf_ncheque.getText()))
    {
        if(!pesquisarCheque())
        tf_dataVencimento.setEnabled(true);
        tf_dataVencimento.setEditable(true);
        tf_dataVencimento.requestFocus();
    }
    }//GEN-LAST:event_tf_nchequeFocusLost

    private void tf_dataVencimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_dataVencimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_dataVencimentoActionPerformed

    private void lbl_nchequeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lbl_nchequeFocusGained
      
    }//GEN-LAST:event_lbl_nchequeFocusGained

    private void tf_nchequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_nchequeActionPerformed
    }//GEN-LAST:event_tf_nchequeActionPerformed

    private void jPanel1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel1FocusLost
    }//GEN-LAST:event_jPanel1FocusLost

    private void tf_documentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_documentoFocusLost
    tf_parcela.setEnabled(true);
    tf_parcela.setEditable(true);
    tf_parcela.requestFocus();
    }//GEN-LAST:event_tf_documentoFocusLost

    private void tf_parcelaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_parcelaFocusLost
    tf_codigodeBarras.setEnabled(true);
    tf_codigodeBarras.setEditable(true);
    
    tf_codigodeBarras.requestFocus();
    }//GEN-LAST:event_tf_parcelaFocusLost

    private void tf_codigodeBarrasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_codigodeBarrasFocusLost
        ta_observacao.setEnabled(true);
        ta_observacao.setEditable(true);
        ta_observacao.requestFocus();
    }//GEN-LAST:event_tf_codigodeBarrasFocusLost

    private void ta_observacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ta_observacaoFocusLost
tf_tipoDespesa.setEnabled(true);
tf_tipoDespesa.setEditable(true);
cb_tipoDespesa.setEnabled(true);
cb_tipoDespesa.requestFocus();
if (tf_tipoDespesa.getText()==null||"".equals(tf_tipoDespesa.getText()))
        {
        if(cb_TipoDespesaControle==false){
        cb_tipoDespesa.addItem("Selecione aqui o tipo de despesa");
        cb_TipoDespesaControle=true;}
        cb_tipoDespesa.setSelectedItem("Selecione aqui o tipo de despesa");
        }
else
        {
            pesquisaNomeTipoDespesaporID(Integer.valueOf(tf_tipoDespesa.getText()));
        }


    }//GEN-LAST:event_ta_observacaoFocusLost

    private void tf_codigodeBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_codigodeBarrasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_codigodeBarrasActionPerformed

    private void rb_boletoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rb_boletoFocusGained
     rb_boleto.setBackground(Color.yellow);
    }//GEN-LAST:event_rb_boletoFocusGained

    private void cb_tipoDespesaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cb_tipoDespesaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_tipoDespesaFocusGained

    public void carregarFornecedor()
    {
    conexao con =new conexao();
    con.conecta();
    rsFornecedor = null;
    rsFornecedor = con.executaConsulta("select * from  fornecedores order by NomeFornecedor");
    fornecedores.clear();
    cb_fornecedor.removeAllItems();
    try 
        {
            while (rsFornecedor.next())
            {
                fornecedores fornecedor = new fornecedores();
                fornecedor.setIdFornecedor(rsFornecedor.getInt("IdFornecedor"));
                fornecedor.setNomeFornecedor(rsFornecedor.getString("NomeFornecedor"));
                cb_fornecedor.addItem(rsFornecedor.getString("NomeFornecedor"));
                fornecedor.setEnderecoFornecedor(rsFornecedor.getString("Enderecofornecedor"));
                fornecedor.setFoneFornecedor(rsFornecedor.getString("FoneFornecedor"));
                fornecedor.setObservacoesfornecedor(rsFornecedor.getString("ObservacoesFornecedor"));
                
               fornecedores.add(fornecedor);
            }
    rsFornecedor.close();
        }
    catch (Exception e )
        {
        JOptionPane.showMessageDialog(null, e);
        }
            
    }
    
    public void carregarTipoDespesa()
    {
    conexao con =new conexao();
    con.conecta();
    rstipoDespesa = null;
    rstipoDespesa = con.executaConsulta("select distinct * from  tipodespesa order by NomeDespesa");
    tipoDespesa.clear();
    cb_tipoDespesa.removeAllItems();
    try 
        {
            while (rstipoDespesa.next())
            {
                tipodespesa tipodespesa = new tipodespesa();
                tipodespesa.setIdTipoDespesa(rstipoDespesa.getInt("IdTipoDespesa"));
                tipodespesa.setNomeDespesa(rstipoDespesa.getString("NomeDespesa"));
                cb_tipoDespesa.addItem(rstipoDespesa.getString("NomeDespesa"));
                tipodespesa.setObservaçãoDespesa(rstipoDespesa.getString("ObservacaoDespesa"));
                tipodespesa.setTipoDespesa(rstipoDespesa.getString("TipoDespesa"));
                
                tipoDespesa.add(tipodespesa);
            }
    rstipoDespesa.close();
        }
    catch (Exception e )
        {
        JOptionPane.showMessageDialog(null, e);
        }
            
    }
    
    public int pegaultimoIdCompromisso()
    {
    posicaoUltimoCompromisso=0;
    //System.out.print("\nTamanho do array de compromissos: "+compromissos.size());
    for (int i = 0; i<=compromissos.size()-1 ;i++)
    {
        //System.out.print("\nComparando Valor na posicao:"+posicaoCompromissos+" de compromissos <LIST>: "+ compromissos.get(posicaoUltimoCompromisso).getIdCompromissos()+" com  IdUltimoCompromisso:"+IdUltimoCompromisso);
     if (compromissos.get(posicaoUltimoCompromisso).getIdCompromissos()>IdUltimoCompromisso)
        {
        IdUltimoCompromisso=compromissos.get(posicaoUltimoCompromisso).getIdCompromissos();
        posicaoUltimoCompromisso=posicaoUltimoCompromisso+1;
        }
     else
        {
        posicaoUltimoCompromisso=posicaoUltimoCompromisso+1;
        }
    }
    return IdUltimoCompromisso+1;
    }
    
    public boolean pesquisarCheque(){
    posicaoUltimoCompromisso=0;
    
    for (int i = 0; i<=compromissos.size()-1 ;i++)
    {
     //System.out.print("\nRegistro: "+compromissos.get(posicaoUltimoCompromisso).getIdCompromissos()+" tem o valor de ncheque: "+compromissos.get(posicaoUltimoCompromisso).getNCheque());    
    String strncheques = (compromissos.get(posicaoUltimoCompromisso).getNCheque().trim());
    
    //if (!strncheques.isEmpty())
    if(strncheques !=null && !"".equals(strncheques))
        // if (!"".equals(strncheque)&&!(strncheque==null))
        {
        //System.out.print(" -> ID:"+compromissos.get(posicaoUltimoCompromisso).getIdCompromissos()+" tem o valor de ncheque: "+compromissos.get(posicaoUltimoCompromisso).getNCheque());
        
        if (strncheques.equals(tf_ncheque.getText().trim())&&compromissos.get(posicaoUltimoCompromisso).getIdCompromissos()!=(Integer.valueOf(tf_Id.getText())))
            {
             
             JOptionPane.showMessageDialog(null,"O cheque nº "+tf_ncheque.getText()+" já foi registrado antes,com o ID: "+ compromissos.get(posicaoUltimoCompromisso).getIdCompromissos()+" se necessário utilize o recurso de edição.");
             tf_ncheque.requestFocus();
             btn_gravarmodificacao.setEnabled(false);
             //System.out.print(" Achei cheque igual! - Vou retornar TRUE");
             return true;
            }
        }
    if (posicaoUltimoCompromisso<compromissos.size()-1)
        posicaoUltimoCompromisso=posicaoUltimoCompromisso+1;
    }
    //System.out.print(" NÃO achei cheque igual! - Vou retornar FALSE");
    return false;
    }
    
    public void pesquisaNomeTipoDespesaporID(int idTipoDespesa)
    {
    posicaoTipoDespesa=0;
    carregarTipoDespesa();
    for (int i=0; i<=tipoDespesa.size()-1;i++)
        {
            if (tipoDespesa.get(posicaoTipoDespesa).getIdTipoDespesa()==Integer.valueOf(tf_tipoDespesa.getText()))
                {
                    cb_tipoDespesa.setSelectedIndex(posicaoTipoDespesa);            
                }
            else
                {
                if(posicaoTipoDespesa<tipoDespesa.size()-1)
                        posicaoTipoDespesa=posicaoTipoDespesa+1;
                }
        }
    }
    
    public void pesquisaNomeFornecedorporID(int idFornecedor)
    {
    posicaoFornecedor=0;
    carregarFornecedor();
    for (int i=0; i<=fornecedores.size()-1;i++)
        {
            if (fornecedores.get(posicaoFornecedor).getIdFornecedor()==Integer.valueOf(tf_fornecedor.getText()))
            {
                cb_fornecedor.setSelectedIndex(posicaoFornecedor);            
            }
            else
            {
                if(posicaoFornecedor<fornecedores.size()-1)
                           posicaoFornecedor=posicaoFornecedor+1;
            }
        }
    }
    
    public void limparCamposCompromisso()
    {
    tf_Id.setText(" ");
    tf_codigodeBarras.setText("");
    tf_dataCadastro.setText("");
    rb_boleto.setSelected(false);
    rb_cheque.setSelected(false);
    tf_dataPagamento.setText("");
    tf_dataVencimento.setText("");
    tf_documento.setText("");
    tf_fornecedor.setText("");
    tf_parcela.setText("");
    tf_valor.setText("");
    ta_observacao.setText("");
    tf_tipoDespesa.setText("");
    tf_ncheque.setText(" ");
    //tf_ncheque.setSize(30,29);
    //rb_boleto.requestFocus();
    
    
    }
    
    public void travarCamposCompromisso()
    {
    tf_Id.setEnabled(false);
    //GrupoTipoDívida.clearSelection();
    tf_codigodeBarras.setEnabled(false);
    tf_dataCadastro.setEnabled(false);
    tf_dataPagamento.setEnabled(false);
    tf_dataVencimento.setEnabled(false);
    tf_documento.setEnabled(false);
    tf_fornecedor.setEnabled(false);
    tf_parcela.setEnabled(false);
    tf_valor.setEnabled(false);
    tf_ncheque.setEnabled(false);
    ta_observacao.setEnabled(false);
    cb_fornecedor.setEnabled(false);
    cb_tipoDespesa.setEnabled(false);
    chb_pagamentoEfetuado.setEnabled(false);
    tf_tipoDespesa.setEnabled(false);
    ta_observacao.setEnabled(false);
    rb_boleto.setEnabled(false);
    rb_cheque.setEnabled(false);
    
    }
    
    public void liberarCamposCompromisso()
    {
    //tf_Id.setEnabled(true);
    //GrupoTipoDívida.clearSelection();
    //tf_codigodeBarras.setEnabled(true);
    //tf_dataCadastro.setEnabled(true);
    //tf_dataPagamento.setEnabled(true);
    //tf_dataVencimento.setEnabled(true);
    //tf_ncheque.setEnabled(true);
    //tf_documento.setEnabled(true);
    //tf_fornecedor.setEnabled(true);
    //tf_parcela.setEnabled(true);
    //tf_valor.setEnabled(true);
    //ta_observacao.setEnabled(true);
    //cb_fornecedor.setEnabled(true);
    //cb_tipoDespesa.setEnabled(true);
    //chb_pagamentoEfetuado.setEnabled(true);
    //tf_tipoDespesa.setEnabled(true);
    //ta_observacao.setEnabled(true);
    rb_boleto.setEnabled(true);
    rb_cheque.setEnabled(true);
    rb_boleto.requestFocus();
    }
    
    public List<compromissos> carregarCompromissos()
    {
    rsCompromissos=null;    
    conexao con = new conexao();
    con.conecta();
    SQL  = "select * from compromissos";
    rsCompromissos = con.executaConsulta(SQL);
    compromissos.clear();
            
    try
        {
        while(rsCompromissos.next())
            {
            compromissos compromisso = new compromissos();
            compromisso.setCodigodeBarras(rsCompromissos.getString("codigoBarras"));
            compromisso.settipoDivida(rsCompromissos.getBoolean("TipoDivida"));
            compromisso.setDataCadastro(rsCompromissos.getString("DataCadastro"));
            compromisso.setDataPagamento(rsCompromissos.getString("DataPagamento"));
            compromisso.setDataVencimento(rsCompromissos.getString("DataVencimento"));
            compromisso.setNCheque(rsCompromissos.getString("Ncheque"));
            compromisso.setDocumento(rsCompromissos.getString("Documento"));
            compromisso.setIdCompromissos(rsCompromissos.getInt("IdCompromisso"));
            compromisso.setIdFornecedor(rsCompromissos.getInt("IdFornecedor"));
            compromisso.setObservacao(rsCompromissos.getString("Observacao"));
            compromisso.setPagamentoEfetuado(rsCompromissos.getBoolean("PagamentoEfetuado"));
            compromisso.setParcela(rsCompromissos.getString("Parcela"));
            compromisso.setTipoDespesa(rsCompromissos.getInt("TipoDespesa"));
            compromisso.setValor(rsCompromissos.getDouble("Valor"));
            
            compromissos.add(compromisso);
            }
    rsCompromissos.close();
        }
     catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    return compromissos;
    }


    public void mostrarCompromissos(List<compromissos> compromissos)
    {
    carregarCompromissos();
    ////System.out.print("\nPosicao Atual Compromissos: "+posicaoCompromissos);
    tf_codigodeBarras.setText(compromissos.get(posicaoCompromissos).getCodigodeBarras());
    tf_Id.setText(String.valueOf(compromissos.get(posicaoCompromissos).getIdCompromissos()));
    tf_dataCadastro.setText(compromissos.get(posicaoCompromissos).getDataCadastro());
    tf_dataPagamento.setText(compromissos.get(posicaoCompromissos).getDataPagamento());
    tf_dataVencimento.setText(compromissos.get(posicaoCompromissos).getDataVencimento());
    tf_documento.setText(compromissos.get(posicaoCompromissos).getDocumento());
    tf_ncheque.setText(compromissos.get(posicaoCompromissos).getNCheque());
    tf_fornecedor.setText(String.valueOf(compromissos.get(posicaoCompromissos).getIdFornecedor()));
    ta_observacao.setText(compromissos.get(posicaoCompromissos).getObservacao());
    tf_parcela.setText(compromissos.get(posicaoCompromissos).getParcela());
    tf_tipoDespesa.setText(String.valueOf(compromissos.get(posicaoCompromissos).getTipoDespesa()));
    tf_valor.setText(String.valueOf(compromissos.get(posicaoCompromissos).getValor()));
    
    if (!(tf_fornecedor.getText()==null||"".equals(tf_fornecedor.getText())))
    {
        pesquisaNomeFornecedorporID(Integer.valueOf(tf_fornecedor.getText()));
    }
    if (!(tf_tipoDespesa.getText()==null||"".equals(tf_tipoDespesa.getText())))
    {
        pesquisaNomeTipoDespesaporID(Integer.valueOf(tf_tipoDespesa.getText()));
    }
    if(compromissos.get(posicaoCompromissos).isPagamentoEfetuado())
        {
            chb_pagamentoEfetuado.setSelected(true);
        }
    else
        {
            chb_pagamentoEfetuado.setSelected(false);
        }
    ////System.out.print("\nPosicao: "+posicaoCompromissos+" tipo divida: "+compromissos.get(posicaoCompromissos).gettipoDivida());
    if(compromissos.get(posicaoCompromissos).gettipoDivida())
    {
         //GrupoTipoDívida.clearSelection();
        //GrupoTipoDívida.setSelected(rb_cheque,true);
        rb_cheque.setSelected(true);
        rb_boleto.setSelected(false);
    }
    else
    {
       //GrupoTipoDívida.clearSelection();
        rb_boleto.setSelected(true);
        rb_cheque.setSelected(false);
    }
    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCompromisso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCompromisso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCompromisso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCompromisso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCompromisso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DescritivoDoFormulário;
    private javax.swing.ButtonGroup GrupoTipoDívida;
    private javax.swing.JButton btn_Anterior;
    private javax.swing.JButton btn_Primeiro;
    private javax.swing.JButton btn_Próximo;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_gravarmodificacao;
    private javax.swing.JButton btn_novo;
    private javax.swing.JButton btn_sair;
    private javax.swing.JButton btn_salvar;
    private javax.swing.JButton btn_Último;
    private javax.swing.JComboBox<String> cb_fornecedor;
    private javax.swing.JComboBox<String> cb_tipoDespesa;
    private javax.swing.JCheckBox chb_pagamentoEfetuado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_DataCadastro;
    private javax.swing.JLabel lbl_Fornecedor;
    private javax.swing.JLabel lbl_Id;
    private javax.swing.JLabel lbl_codigodeBarras;
    private javax.swing.JLabel lbl_dataPagamento;
    private javax.swing.JLabel lbl_dataVencimento;
    private javax.swing.JLabel lbl_documento;
    private javax.swing.JLabel lbl_ncheque;
    private javax.swing.JLabel lbl_observacao;
    private javax.swing.JLabel lbl_pagamentoEfetuado;
    private javax.swing.JLabel lbl_parcela;
    private javax.swing.JLabel lbl_tipoDespesa;
    private javax.swing.JLabel lbl_tipodivida;
    private javax.swing.JLabel lbl_valor;
    private javax.swing.JRadioButton rb_boleto;
    private javax.swing.JRadioButton rb_cheque;
    private javax.swing.JScrollPane sp_observacao;
    private javax.swing.JTextArea ta_observacao;
    private javax.swing.JTextField tf_Id;
    private javax.swing.JTextField tf_codigodeBarras;
    private javax.swing.JTextField tf_dataCadastro;
    private javax.swing.JTextField tf_dataPagamento;
    private javax.swing.JTextField tf_dataVencimento;
    private javax.swing.JTextField tf_documento;
    private javax.swing.JTextField tf_fornecedor;
    private javax.swing.JTextField tf_ncheque;
    private javax.swing.JTextField tf_parcela;
    private javax.swing.JTextField tf_tipoDespesa;
    private javax.swing.JTextField tf_valor;
    // End of variables declaration//GEN-END:variables
}
