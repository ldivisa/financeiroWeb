/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.financeiro.frmCompromissos;

import com.mycompany.financeiro.dao.compromissos;
import com.mycompany.financeiro.dao.fornecedores;
import com.mycompany.financeiro.dao.tipodespesa;
import com.mycompany.financeiro.dao.utilidades.conexao;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author luiz
 */
public class frmBaixarBoletos extends javax.swing.JFrame {
    public ResultSet rsCompromissos,  rsFornecedor, rstipoDespesa;
    public String SQL;
    public int posicaoCompromissos=0,posicaoFornecedor=0,posicaoTipoDespesa=0,posicaoUltimoCompromisso=0,IdUltimoCompromisso=0;
    public List<compromissos> compromissos = new ArrayList<>();
    public List<fornecedores> fornecedores = new ArrayList<>();
    public List<tipodespesa> tipoDespesa = new ArrayList<>();
    /**
     * Creates new form frmCompromisso
     */
    public frmBaixarBoletos() {
        initComponents();
        limparCamposCompromisso();
        travarCamposCompromisso();
        mostrarCompromissos(carregarCompromissos());
        carregarFornecedor();
        carregarTipoDespesa();
        pesquisaNomeFornecedorporID(posicaoFornecedor);
        pesquisaNomeTipoDespesaporID(posicaoTipoDespesa);
        btn_salvar.setEnabled(false);
        btn_gravarmodificacao.setEnabled(false);
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoTipoDívida = new javax.swing.ButtonGroup();
        DescritivoDoFormulário = new javax.swing.JLabel();
        lbl_Id = new javax.swing.JLabel();
        tf_Id = new javax.swing.JTextField();
        lbl_DataCadastro = new javax.swing.JLabel();
        tf_dataCadastro = new javax.swing.JTextField();
        lbl_dataVencimento = new javax.swing.JLabel();
        tf_dataVencimento = new javax.swing.JTextField();
        lbl_valor = new javax.swing.JLabel();
        tf_valor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cb_fornecedor = new javax.swing.JComboBox<>();
        tf_fornecedor = new javax.swing.JTextField();
        lbl_documento = new javax.swing.JLabel();
        tf_documento = new javax.swing.JTextField();
        lbl_parcela = new javax.swing.JLabel();
        tf_parcela = new javax.swing.JTextField();
        lbl_codigodeBarras = new javax.swing.JLabel();
        tf_codigodeBarras = new javax.swing.JTextField();
        lbl_observacao = new javax.swing.JLabel();
        sp_observacao = new javax.swing.JScrollPane();
        ta_observacao = new javax.swing.JTextArea();
        lbl_dataPagamento = new javax.swing.JLabel();
        lbl_pagamentoEfetuado = new javax.swing.JLabel();
        tf_dataPagamento = new javax.swing.JTextField();
        chb_pagamentoEfetuado = new javax.swing.JCheckBox();
        btn_novo = new javax.swing.JButton();
        tf_tipoDespesa = new javax.swing.JTextField();
        lbl_tipoDespesa = new javax.swing.JLabel();
        cb_tipoDespesa = new javax.swing.JComboBox<>();
        btn_Primeiro = new javax.swing.JButton();
        btn_Anterior = new javax.swing.JButton();
        btn_Próximo = new javax.swing.JButton();
        btn_Último = new javax.swing.JButton();
        lbl_tipodivida = new javax.swing.JLabel();
        rb_boleto = new javax.swing.JRadioButton();
        rb_cheque = new javax.swing.JRadioButton();
        btn_salvar = new javax.swing.JButton();
        btn_baixar = new javax.swing.JButton();
        btn_sair = new javax.swing.JButton();
        btn_gravarmodificacao = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(800, 600));

        DescritivoDoFormulário.setFont(new java.awt.Font("Noto Sans", 0, 36)); // NOI18N
        DescritivoDoFormulário.setForeground(new java.awt.Color(255, 0, 0));
        DescritivoDoFormulário.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DescritivoDoFormulário.setText("Baixar Boletos");
        DescritivoDoFormulário.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lbl_Id.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_Id.setText("Id:");

        tf_Id.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N

        lbl_DataCadastro.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_DataCadastro.setText("Data Cadastro:");

        tf_dataCadastro.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N

        lbl_dataVencimento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_dataVencimento.setText("Data Vencimento:");

        tf_dataVencimento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_dataVencimento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_dataVencimentoFocusLost(evt);
            }
        });

        lbl_valor.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_valor.setText("Valor:");

        tf_valor.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_valor.setAutoscrolls(false);
        tf_valor.setMinimumSize(new java.awt.Dimension(120, 39));
        tf_valor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_valorFocusLost(evt);
            }
        });
        tf_valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_valorActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel1.setText("Fornecedor:");

        cb_fornecedor.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        cb_fornecedor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_fornecedorItemStateChanged(evt);
            }
        });

        tf_fornecedor.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_fornecedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_fornecedorFocusLost(evt);
            }
        });
        tf_fornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_fornecedorActionPerformed(evt);
            }
        });

        lbl_documento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_documento.setText("Documento:");
        lbl_documento.setToolTipText("Número do pedido ou nota fiscal que gerou a dívida");

        tf_documento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N

        lbl_parcela.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_parcela.setText("Parcela:");

        tf_parcela.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_parcela.setToolTipText("número da parcela do boleto caso existam várias parcelas relacionadas à mesma nota fiscal ou pedido");

        lbl_codigodeBarras.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_codigodeBarras.setText("Código de barras:");

        tf_codigodeBarras.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_codigodeBarras.setToolTipText("Digite ou digitalize o código de barras do boleto se puder");

        lbl_observacao.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_observacao.setText("Observações:");

        ta_observacao.setColumns(20);
        ta_observacao.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        ta_observacao.setRows(5);
        ta_observacao.setPreferredSize(new java.awt.Dimension(800, 167));
        sp_observacao.setViewportView(ta_observacao);

        lbl_dataPagamento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_dataPagamento.setText("Data Pagamento:");

        lbl_pagamentoEfetuado.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_pagamentoEfetuado.setText("Pagamento efetuado:");

        tf_dataPagamento.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_dataPagamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_dataPagamentoFocusLost(evt);
            }
        });

        chb_pagamentoEfetuado.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        chb_pagamentoEfetuado.setText("SIM");

        btn_novo.setMnemonic('N');
        btn_novo.setText("Novo");
        btn_novo.setEnabled(false);
        btn_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_novoActionPerformed(evt);
            }
        });

        tf_tipoDespesa.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        tf_tipoDespesa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_tipoDespesaFocusLost(evt);
            }
        });
        tf_tipoDespesa.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tf_tipoDespesaPropertyChange(evt);
            }
        });

        lbl_tipoDespesa.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_tipoDespesa.setText("Tipo de Despesa:");

        cb_tipoDespesa.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        cb_tipoDespesa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_tipoDespesaItemStateChanged(evt);
            }
        });
        cb_tipoDespesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_tipoDespesaActionPerformed(evt);
            }
        });

        btn_Primeiro.setMnemonic('p');
        btn_Primeiro.setText("Primeiro");
        btn_Primeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PrimeiroActionPerformed(evt);
            }
        });

        btn_Anterior.setMnemonic('a');
        btn_Anterior.setText("Anterior");
        btn_Anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AnteriorActionPerformed(evt);
            }
        });

        btn_Próximo.setMnemonic('r');
        btn_Próximo.setText("Próximo");
        btn_Próximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PróximoActionPerformed(evt);
            }
        });

        btn_Último.setMnemonic('u');
        btn_Último.setText("Último");
        btn_Último.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ÚltimoActionPerformed(evt);
            }
        });

        lbl_tipodivida.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        lbl_tipodivida.setText("Tipo:");

        rb_boleto.setBackground(new java.awt.Color(153, 153, 153));
        GrupoTipoDívida.add(rb_boleto);
        rb_boleto.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        rb_boleto.setText("Boleto");
        rb_boleto.setAlignmentY(0.0F);
        rb_boleto.setMaximumSize(new java.awt.Dimension(100, 41));
        rb_boleto.setMinimumSize(new java.awt.Dimension(100, 41));
        rb_boleto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rb_boletoFocusLost(evt);
            }
        });

        rb_cheque.setBackground(new java.awt.Color(153, 153, 153));
        GrupoTipoDívida.add(rb_cheque);
        rb_cheque.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        rb_cheque.setText("Cheque");
        rb_cheque.setAlignmentY(0.0F);
        rb_cheque.setMaximumSize(new java.awt.Dimension(100, 41));
        rb_cheque.setMinimumSize(new java.awt.Dimension(100, 41));
        rb_cheque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_chequeActionPerformed(evt);
            }
        });

        btn_salvar.setMnemonic('a');
        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        btn_baixar.setMnemonic('b');
        btn_baixar.setText("Baixar");
        btn_baixar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_baixarActionPerformed(evt);
            }
        });

        btn_sair.setMnemonic('s');
        btn_sair.setText("Sair");
        btn_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sairActionPerformed(evt);
            }
        });

        btn_gravarmodificacao.setMnemonic('g');
        btn_gravarmodificacao.setText("Gravar Modificações");
        btn_gravarmodificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gravarmodificacaoActionPerformed(evt);
            }
        });

        jButton1.setText("Copiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Descritivo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btn_novo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_salvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_baixar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_gravarmodificacao))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_valor)
                                .addGap(33, 33, 33)
                                .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_documento)
                                .addGap(12, 12, 12)
                                .addComponent(tf_documento, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_parcela)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_parcela, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbl_dataPagamento)
                                    .addComponent(lbl_codigodeBarras))
                                .addGap(18, 18, 18)
                                .addComponent(tf_dataPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbl_observacao)
                            .addComponent(sp_observacao, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_pagamentoEfetuado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chb_pagamentoEfetuado)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tf_codigodeBarras, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                                    .addComponent(cb_fornecedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DescritivoDoFormulário, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_tipoDespesa)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_tipoDespesa, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cb_tipoDespesa, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 43, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_Id)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_DataCadastro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_dataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_tipodivida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rb_boleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rb_cheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(lbl_dataVencimento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tf_dataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(btn_sair)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Primeiro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Anterior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Próximo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Último)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(DescritivoDoFormulário)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_dataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_tipodivida)
                    .addComponent(lbl_dataVencimento)
                    .addComponent(rb_boleto, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_cheque, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Id)
                    .addComponent(tf_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_DataCadastro)
                    .addComponent(tf_dataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_valor)
                    .addComponent(tf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_documento)
                    .addComponent(tf_documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_parcela)
                    .addComponent(tf_parcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cb_fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_fornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_codigodeBarras)
                    .addComponent(tf_codigodeBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_dataPagamento)
                    .addComponent(tf_dataPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_tipoDespesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_tipoDespesa)
                    .addComponent(tf_tipoDespesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_observacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sp_observacao, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_pagamentoEfetuado)
                    .addComponent(chb_pagamentoEfetuado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_novo)
                    .addComponent(btn_salvar)
                    .addComponent(btn_baixar)
                    .addComponent(btn_gravarmodificacao))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_sair)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_Primeiro)
                        .addComponent(btn_Anterior)
                        .addComponent(btn_Próximo)
                        .addComponent(btn_Último)))
                .addGap(96, 96, 96))
        );

        setSize(new java.awt.Dimension(853, 625));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_novoActionPerformed
    limparCamposCompromisso();
    liberarCamposCompromisso();
    tf_Id.setText(String.valueOf(pegaultimoIdCompromisso()));
    tf_dataCadastro.setText(LocalDate.now().format(DateTimeFormatter.ofPattern("dd/MM/YYYY")));
    btn_salvar.setEnabled(true);
    }//GEN-LAST:event_btn_novoActionPerformed

    private void btn_PrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PrimeiroActionPerformed
      posicaoCompromissos=0;
      carregarCompromissos();
        mostrarCompromissos(compromissos);
    }//GEN-LAST:event_btn_PrimeiroActionPerformed

    private void btn_AnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AnteriorActionPerformed
    if (posicaoCompromissos>0)
        {
        posicaoCompromissos=posicaoCompromissos-1;
        carregarCompromissos();
        mostrarCompromissos(compromissos);
        }
    
    }//GEN-LAST:event_btn_AnteriorActionPerformed

    private void btn_PróximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PróximoActionPerformed
    if (posicaoCompromissos<compromissos.size()-1)
        {
        posicaoCompromissos=posicaoCompromissos+1;
        carregarCompromissos();
        mostrarCompromissos(compromissos);
        }
    }//GEN-LAST:event_btn_PróximoActionPerformed

    private void btn_ÚltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ÚltimoActionPerformed
    posicaoCompromissos=compromissos.size()-1;
    carregarCompromissos();
    mostrarCompromissos(compromissos);
    }//GEN-LAST:event_btn_ÚltimoActionPerformed

    private void tf_fornecedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_fornecedorFocusLost
    if(!tf_fornecedor.getText().isEmpty())
    {
        carregarFornecedor();
    posicaoFornecedor=0;
    for (int i=0; i<=fornecedores.size()-1;i++)
        {
            if (fornecedores.get(posicaoFornecedor).getIdFornecedor()==Integer.valueOf(tf_fornecedor.getText()))
            {
                cb_fornecedor.setSelectedIndex(posicaoFornecedor);            
            }
            else
            {
            posicaoFornecedor=posicaoFornecedor+1;
            }
        }
    }
    }//GEN-LAST:event_tf_fornecedorFocusLost

    private void cb_fornecedorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_fornecedorItemStateChanged
    posicaoFornecedor=0;
    for (int i=0; i<=fornecedores.size()-1;i++)
        {
            //System.out.print("\n combo fornecedor:"+cb_fornecedor.getSelectedItem().toString());
            if (fornecedores.get(posicaoFornecedor).getNomeFornecedor().equals(cb_fornecedor.getSelectedItem().toString()))
            {
                tf_fornecedor.setText(String.valueOf(fornecedores.get(posicaoFornecedor).getIdFornecedor()));
            }
            else
            {
            posicaoFornecedor=posicaoFornecedor+1;
            //System.out.print("\nPassando...");
            }
        }
    }//GEN-LAST:event_cb_fornecedorItemStateChanged

    private void tf_fornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_fornecedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_fornecedorActionPerformed

    private void tf_tipoDespesaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_tipoDespesaFocusLost
/*        if (!tf_tipoDespesa.getText().isBlank())
        {
        carregarTipoDespesa();
    posicaoTipoDespesa=0;
    for (int i=0; i<=tipoDespesa.size()-1;i++)
        {
            if (tipoDespesa.get(posicaoTipoDespesa).getIdTipoDespesa()==Integer.valueOf(tf_tipoDespesa.getText()))
            {
                cb_tipoDespesa.setSelectedIndex(posicaoTipoDespesa);            
            }
            else
            {
            posicaoTipoDespesa=posicaoTipoDespesa+1;
            }
        }
        }*/
    }//GEN-LAST:event_tf_tipoDespesaFocusLost

    private void cb_tipoDespesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_tipoDespesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_tipoDespesaActionPerformed

    private void cb_tipoDespesaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_tipoDespesaItemStateChanged
    posicaoTipoDespesa=0;
    for (int i=0; i<=tipoDespesa.size()-1;i++)
        {
            
            if (tipoDespesa.get(posicaoTipoDespesa).getNomeDespesa().equals(cb_tipoDespesa.getSelectedItem().toString()))
            {
                tf_tipoDespesa.setText(String.valueOf(tipoDespesa.get(posicaoTipoDespesa).getIdTipoDespesa()));
            }
            else
            {
            posicaoTipoDespesa=posicaoTipoDespesa+1;
            
            }
        }
    }//GEN-LAST:event_cb_tipoDespesaItemStateChanged

    private void tf_valorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_valorActionPerformed
     
    }//GEN-LAST:event_tf_valorActionPerformed

    private void tf_valorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_valorFocusLost
    
    String strvalor = (tf_valor.getText());
        
     if (Pattern.matches("^([1-9]{1}[\\d]{0,2}(\\.[\\d]{3})*(\\,[\\d]{0,2})?|[1-9]{1}[\\d]{0,}(\\,[\\d]{0,2})?|0(\\,[\\d]{0,2})?|(\\,[\\d]{1,2})?)$",strvalor))
     {
            strvalor= strvalor.replace(",",".");
            tf_valor.setText(strvalor);
     }
     else
     {
            JOptionPane.showMessageDialog(null,"Há problema no valor digitado no campo de valor, refaça com atenção!");
            //tf_valor.setText("");
            tf_valor.requestFocus();
     }
     
    }//GEN-LAST:event_tf_valorFocusLost

    private void tf_dataVencimentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_dataVencimentoFocusLost
        String DataVencimento = tf_dataVencimento.getText();
        if (!Pattern.matches("(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[012])/((?:19|20)[0-9][0-9])", DataVencimento))
        {
            JOptionPane.showMessageDialog(null,"Há problema no valor digitado no campo de Data de Vencimento, refaça com atenção!");
            tf_dataVencimento.setText("");
            tf_dataVencimento.requestFocus();
        }
    }//GEN-LAST:event_tf_dataVencimentoFocusLost

    private void tf_dataPagamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_dataPagamentoFocusLost
    String DataPagamento = tf_dataPagamento.getText();
        if (!Pattern.matches("(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[012])/((?:19|20)[0-9][0-9])", DataPagamento))
        {
            JOptionPane.showMessageDialog(null,"Há problema no valor digitado no campo de Data de Pagamento, refaça com atenção!");
            tf_dataPagamento.setText("");
            tf_dataPagamento.requestFocus();
        }
    }//GEN-LAST:event_tf_dataPagamentoFocusLost

    private void rb_boletoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rb_boletoFocusLost
     /*//if(!(rb_boleto.isSelected()||!rb_cheque.isSelected())){
     if(rb_boleto.isSelected()||rb_boleto.isSelected())
     {
     //System.out.print("\n Selecionada opcao de tipo de divida");
     }
     else
     {
            JOptionPane.showMessageDialog(null,"Defina se a dívida é um boleto ou um cheque!");
            rb_boleto.requestFocus();
     }*/
    }//GEN-LAST:event_rb_boletoFocusLost

    private void rb_chequeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_chequeActionPerformed
          if(rb_boleto.isSelected()||rb_boleto.isSelected())
     {
     //System.out.print("\n Selecionada opcao de tipo de divida");
     }
     else
     {
            JOptionPane.showMessageDialog(null,"Defina se a dívida é um boleto ou um cheque!");
            rb_boleto.requestFocus();
     }
    }//GEN-LAST:event_rb_chequeActionPerformed

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
if(!rb_boleto.isSelected()&&!rb_cheque.isSelected())
    JOptionPane.showMessageDialog(null,"Não é nem boleto nem cheque");
            
//definir qual o estado de tipodivida ->
    boolean bolTipoDivida=false;
    if(rb_boleto.isSelected())
        bolTipoDivida= false; //false para boleto
    if(rb_cheque.isSelected())    
        bolTipoDivida=true; //true para cheques
    
    conexao con  = new conexao();
    con.conecta();
    SQL=("insert into compromissos (idCompromisso,TipoDivida,DataCadastro,DataVencimento,Valor,IdFornecedor,Documento,Parcela,CodigoBarras,Observacao,TipoDespesa,DataPagamento,PagamentoEfetuado)"
      +"values ("
      +(tf_Id.getText())+","
      +bolTipoDivida+",'"
      +tf_dataCadastro.getText()+"','"
      +tf_dataVencimento.getText()+"','"
      +tf_valor.getText()+"',"
      +(tf_fornecedor.getText())+",'"
      +tf_documento.getText()+ "','"
      +tf_parcela.getText()+"','"
      +tf_codigodeBarras.getText()+"','"
      +ta_observacao.getText()+"','"
      +tf_tipoDespesa.getText()+"',"
      +null+","
      +null+
      ")");
            
    //System.out.print ("\n"+SQL);
    con.executaUpdate(SQL);
    
    btn_salvar.setEnabled(false);
    travarCamposCompromisso();
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void btn_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sairActionPerformed
   dispose();
    }//GEN-LAST:event_btn_sairActionPerformed

    private void btn_baixarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_baixarActionPerformed
   liberarCamposCompromisso();
   btn_baixar.setEnabled(false);
   btn_gravarmodificacao.setEnabled(true);
  
      
    }//GEN-LAST:event_btn_baixarActionPerformed

    private void btn_gravarmodificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gravarmodificacaoActionPerformed
   if(!rb_boleto.isSelected()&&!rb_cheque.isSelected())
    JOptionPane.showMessageDialog(null,"Não é nem boleto nem cheque");

        boolean tipoDivida;
        if (rb_boleto.isSelected())
        tipoDivida=false;
    else
        tipoDivida=true;
        Date data = new Date();
        SimpleDateFormat formatodata = new SimpleDateFormat("dd/MM/yyyy");
        String datahoje = formatodata.format(data);
        //System.out.print("\n Hoje é:"+datahoje);
        
        SQL = "update compromissos set "+
            "idCompromisso = "+tf_Id.getText()+","+
            "TipoDivida = "+tipoDivida+","+
            "DataCadastro = '"+tf_dataCadastro.getText()+"',"+
            "DataVencimento = '"+tf_dataVencimento.getText()+"',"+
            "Valor = '"+tf_valor.getText()+"',"+
            "IdFornecedor ="+tf_fornecedor.getText()+","+
            "Documento = '"+tf_documento.getText()+"',"+
            "Parcela = '"+tf_parcela.getText()+"',"+
            "CodigoBarras = '"+tf_codigodeBarras.getText()+"',"+
            "Observacao = ' "+ta_observacao.getText()+"',"+
            "TipoDespesa = " +tf_tipoDespesa.getText()+" ,"+
            "DataPagamento = '"+datahoje+"',"+
            "PagamentoEfetuado = '1'"+    
            "where idCompromisso ="+tf_Id.getText();
        //System.out.print("\nSQL="+SQL);
        conexao con = new conexao();
        con.conecta();
        con.executaUpdate(SQL);
        btn_gravarmodificacao.setEnabled(false);
        btn_baixar.setEnabled(true);
        travarCamposCompromisso();
        
        //carregarCompromissos();
        posicaoCompromissos=compromissos.size()-1;
        mostrarCompromissos(compromissos);
    }//GEN-LAST:event_btn_gravarmodificacaoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
    StringSelection CodigodeBarras = new StringSelection(tf_codigodeBarras.getText());
    Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    clipboard.setContents(CodigodeBarras, null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tf_tipoDespesaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tf_tipoDespesaPropertyChange
        if (!(tf_tipoDespesa==null)&&!("".equals(tf_tipoDespesa.getText())))
            pesquisaNomeTipoDespesaporID(posicaoTipoDespesa);
    }//GEN-LAST:event_tf_tipoDespesaPropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    StringSelection CodigodeBarras = new StringSelection("Comprovante "+
            cb_tipoDespesa.getItemAt(posicaoTipoDespesa)+" "+cb_fornecedor.getItemAt(posicaoFornecedor)+" "+ tf_documento.getText()+"-"+tf_parcela.getText()+" "+tf_valor.getText()+" "+
             tf_dataVencimento.getText().substring(0, 2)+"."+
            tf_dataVencimento.getText().substring(3, 5)+"."+
            tf_dataVencimento.getText().substring(6, 10));
    Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
    clipboard.setContents(CodigodeBarras, null);

    }//GEN-LAST:event_jButton2ActionPerformed

    public void carregarFornecedor()
    {
    conexao con =new conexao();
    con.conecta();
    rsFornecedor = null;
    rsFornecedor = con.executaConsulta("select * from  fornecedores order by NomeFornecedor");
    fornecedores.clear();
    cb_fornecedor.removeAllItems();
    try 
        {
            while (rsFornecedor.next())
            {
                fornecedores fornecedor = new fornecedores();
                fornecedor.setIdFornecedor(rsFornecedor.getInt("IdFornecedor"));
                fornecedor.setNomeFornecedor(rsFornecedor.getString("NomeFornecedor"));
                cb_fornecedor.addItem(rsFornecedor.getString("NomeFornecedor"));
                fornecedor.setEnderecoFornecedor(rsFornecedor.getString("Enderecofornecedor"));
                fornecedor.setFoneFornecedor(rsFornecedor.getString("FoneFornecedor"));
                fornecedor.setObservacoesfornecedor(rsFornecedor.getString("ObservacoesFornecedor"));
                
               fornecedores.add(fornecedor);
            }
        }
    catch (Exception e )
        {
        JOptionPane.showMessageDialog(null, e);
        }
            
    }
    
    public void carregarTipoDespesa()
    {
    conexao con =new conexao();
    con.conecta();
    rstipoDespesa = null;
    rstipoDespesa = con.executaConsulta("select * from  tipodespesa order by NomeDespesa");
    tipoDespesa.clear();
    try 
        {
            while (rstipoDespesa.next())
            {
                tipodespesa tipodespesa = new tipodespesa();
                tipodespesa.setIdTipoDespesa(rstipoDespesa.getInt("IdTipoDespesa"));
                tipodespesa.setNomeDespesa(rstipoDespesa.getString("NomeDespesa"));
                cb_tipoDespesa.addItem(rstipoDespesa.getString("NomeDespesa"));
                tipodespesa.setObservaçãoDespesa(rstipoDespesa.getString("ObservacaoDespesa"));
                tipodespesa.setTipoDespesa(rstipoDespesa.getString("TipoDespesa"));
                
                tipoDespesa.add(tipodespesa);
            }
        rstipoDespesa.close();
        }
    catch (Exception e )
        {
        JOptionPane.showMessageDialog(null, e);
        }
            
    }
    
    public int pegaultimoIdCompromisso()
    {
    posicaoUltimoCompromisso=0;
    //System.out.print("\nTamanho do array de compromissos: "+compromissos.size());
    for (int i = 0; i<=compromissos.size()-1 ;i++)
    {
        //System.out.print("\nComparando Valor na posicao:"+posicaoCompromissos+" de compromissos <LIST>: "+ compromissos.get(posicaoUltimoCompromisso).getIdCompromissos()+" com  IdUltimoCompromisso:"+IdUltimoCompromisso);
     if (compromissos.get(posicaoUltimoCompromisso).getIdCompromissos()>IdUltimoCompromisso)
        {
        IdUltimoCompromisso=compromissos.get(posicaoUltimoCompromisso).getIdCompromissos();
        posicaoUltimoCompromisso=posicaoUltimoCompromisso+1;
        }
     else
        {
        posicaoUltimoCompromisso=posicaoUltimoCompromisso+1;
        }
    }
    return IdUltimoCompromisso+1;
    }
    
    
    public void pesquisaNomeTipoDespesaporID(int idTipoDespesa)
    {
    //cb_tipoDespesa.setEnabled(true);
    carregarTipoDespesa();
    posicaoTipoDespesa=0;
    for (int i=0; i<=tipoDespesa.size()-1;i++)
        {
            if (tipoDespesa.get(posicaoTipoDespesa).getIdTipoDespesa()==Integer.valueOf(tf_tipoDespesa.getText()))
            {
                cb_tipoDespesa.setSelectedIndex(posicaoTipoDespesa);            
             //  System.out.print("\nNº"+tf_Id.getText()+" Chave procurada: "+Integer.valueOf(tf_tipoDespesa.getText()) +" Posicao:"+posicaoTipoDespesa+" codigo: "+tipoDespesa.get(posicaoTipoDespesa).getIdTipoDespesa()+" Valor:"+cb_tipoDespesa.getSelectedItem().toString());
            }
            else
            {
            posicaoTipoDespesa=posicaoTipoDespesa+1;
            }
        }
    }
    
    public void pesquisaNomeFornecedorporID(int idFornecedor)
    {
    carregarFornecedor();
    posicaoFornecedor=0;
    for (int i=0; i<=fornecedores.size()-1;i++)
        {
            if (fornecedores.get(posicaoFornecedor).getIdFornecedor()==Integer.valueOf(tf_fornecedor.getText()))
            {
                cb_fornecedor.setSelectedIndex(posicaoFornecedor);            
            }
            else
            {
            posicaoFornecedor=posicaoFornecedor+1;
            }
        }
    }
    
    public void limparCamposCompromisso()
    {
    tf_Id.setText(" ");
    tf_codigodeBarras.setText("");
    tf_dataCadastro.setText("");
    rb_boleto.setSelected(false);
    rb_cheque.setSelected(false);
    tf_dataPagamento.setText("");
    tf_dataVencimento.setText("");
    tf_documento.setText("");
    tf_fornecedor.setText("");
    tf_parcela.setText("      ");
    tf_valor.setText("");
    ta_observacao.setText("");
    tf_tipoDespesa.setText("");
    //rb_boleto.requestFocus();
    
    
    }
    
    public void travarCamposCompromisso()
    {
    tf_Id.setEnabled(false);
    GrupoTipoDívida.clearSelection();
    tf_codigodeBarras.setEnabled(false);
    tf_dataCadastro.setEnabled(false);
    tf_dataPagamento.setEnabled(false);
    tf_dataVencimento.setEnabled(false);
    tf_documento.setEnabled(false);
    tf_fornecedor.setEnabled(false);
    tf_parcela.setEnabled(false);
    tf_valor.setEnabled(false);
    ta_observacao.setEnabled(false);
    cb_fornecedor.setEnabled(false);
    cb_tipoDespesa.setEnabled(false);
    chb_pagamentoEfetuado.setEnabled(false);
    tf_tipoDespesa.setEnabled(false);
    ta_observacao.setEnabled(false);
    rb_boleto.setEnabled(false);
    rb_cheque.setEnabled(false);
    
    }
    
    public void liberarCamposCompromisso()
    {

        boolean rbcheque_state=false,rbboleto_state=false;
    if (rb_boleto.isSelected())
        rbboleto_state=true;
    if (rb_cheque.isSelected())
        rbcheque_state=true;
    GrupoTipoDívida.clearSelection();
    rb_boleto.setEnabled(true);
    if (rbboleto_state==true)
        rb_boleto.setSelected(true);
    rb_cheque.setEnabled(true);
    if (rbcheque_state==true)
        rb_cheque.setSelected(true);
    rb_boleto.requestFocus();
    tf_Id.setEnabled(true);
    
    tf_codigodeBarras.setEnabled(true);
    tf_dataCadastro.setEnabled(true);
    tf_dataPagamento.setEnabled(true);
    tf_dataVencimento.setEnabled(true);
    tf_documento.setEnabled(true);
    tf_fornecedor.setEnabled(true);
    tf_parcela.setEnabled(true);
    tf_valor.setEnabled(true);
    ta_observacao.setEnabled(true);
    cb_fornecedor.setEnabled(true);
    cb_tipoDespesa.setEnabled(true);
    //chb_pagamentoEfetuado.setEnabled(true);
    tf_tipoDespesa.setEnabled(true);
    ta_observacao.setEnabled(true);
    
    }
    
    public List<compromissos> carregarCompromissos()
    {
    rsCompromissos=null;    
    conexao con = new conexao();
    con.conecta();
    SQL  = "select * ,substr(DataVencimento, 7, 4) AS ano," +
    "substr(DataVencimento, 4, 2) AS mes," +
    "substr(DataVencimento, 1, 2) AS dia  from compromissos where PagamentoEfetuado = '0' and TipoDivida='0' order by ano,mes,dia";
    rsCompromissos = con.executaConsulta(SQL);
    compromissos.clear();
    
    try
        {
        if (!rsCompromissos.isBeforeFirst())
        {
            JOptionPane.showMessageDialog(null, "Não identifiquei registros passíveis de baixa financeira");
            dispose();
            return compromissos;
        }
        
        
        while(rsCompromissos.next())
            {
            compromissos compromisso = new compromissos();
            compromisso.setCodigodeBarras(rsCompromissos.getString("codigoBarras"));
            compromisso.settipoDivida(rsCompromissos.getBoolean("TipoDivida"));
            compromisso.setDataCadastro(rsCompromissos.getString("DataCadastro"));
            compromisso.setDataPagamento(rsCompromissos.getString("DataPagamento"));
            compromisso.setDataVencimento(rsCompromissos.getString("DataVencimento"));
            compromisso.setDocumento(rsCompromissos.getString("Documento"));
            compromisso.setIdCompromissos(rsCompromissos.getInt("IdCompromisso"));
            compromisso.setIdFornecedor(rsCompromissos.getInt("IdFornecedor"));
            compromisso.setObservacao(rsCompromissos.getString("Observacao"));
            compromisso.setPagamentoEfetuado(rsCompromissos.getBoolean("PagamentoEfetuado"));
            compromisso.setParcela(rsCompromissos.getString("Parcela"));
            compromisso.setTipoDespesa(rsCompromissos.getInt("TipoDespesa"));
            compromisso.setValor(rsCompromissos.getDouble("Valor"));
            
            compromissos.add(compromisso);
            }
        rsCompromissos.close();
        }
     catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    return compromissos;
    }
    public void mostrarCompromissos(List<compromissos> compromissos)
    {
    carregarCompromissos();
    //System.out.print("\nPosicao Atual Compromissos: "+posicaoCompromissos);
    tf_codigodeBarras.setText(compromissos.get(posicaoCompromissos).getCodigodeBarras());
    tf_Id.setText(String.valueOf(compromissos.get(posicaoCompromissos).getIdCompromissos()));
    tf_dataCadastro.setText(compromissos.get(posicaoCompromissos).getDataCadastro());
    tf_dataPagamento.setText(compromissos.get(posicaoCompromissos).getDataPagamento());
    tf_dataVencimento.setText(compromissos.get(posicaoCompromissos).getDataVencimento());
    tf_documento.setText(compromissos.get(posicaoCompromissos).getDocumento());
    tf_fornecedor.setText(String.valueOf(compromissos.get(posicaoCompromissos).getIdFornecedor()));
    ta_observacao.setText(compromissos.get(posicaoCompromissos).getObservacao());
    tf_parcela.setText(compromissos.get(posicaoCompromissos).getParcela());
    tf_tipoDespesa.setText(String.valueOf(compromissos.get(posicaoCompromissos).getTipoDespesa()));
    tf_valor.setText(String.valueOf(compromissos.get(posicaoCompromissos).getValor()));
    if (!(tf_fornecedor.getText()==null||"".equals(tf_fornecedor.getText())))
                {
                    pesquisaNomeFornecedorporID(Integer.valueOf(tf_fornecedor.getText()));
                }
    if (!(tf_tipoDespesa.getText()==null||"".equals(tf_tipoDespesa.getText())))
                {
                    pesquisaNomeTipoDespesaporID(Integer.valueOf(tf_tipoDespesa.getText()));
                    
                  //System.out.print("\nPosicao: "+posicaoCompromissos+" tipo divida: "+compromissos.get(posicaoCompromissos).gettipoDivida());
                }
    if(compromissos.get(posicaoCompromissos).isPagamentoEfetuado())
                {
                    chb_pagamentoEfetuado.setSelected(true);
                }
    else
                {
                    chb_pagamentoEfetuado.setSelected(false);
                }
    
    if(compromissos.get(posicaoCompromissos).gettipoDivida())
                {
                   GrupoTipoDívida.clearSelection();
                    //GrupoTipoDívida.setSelected(rb_cheque,true);
                    rb_cheque.setSelected(true);
                }
    else
                {
                   GrupoTipoDívida.clearSelection();
                    rb_boleto.setSelected(true);
                }
    
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCompromisso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCompromisso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCompromisso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCompromisso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmBaixarBoletos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DescritivoDoFormulário;
    private javax.swing.ButtonGroup GrupoTipoDívida;
    private javax.swing.JButton btn_Anterior;
    private javax.swing.JButton btn_Primeiro;
    private javax.swing.JButton btn_Próximo;
    private javax.swing.JButton btn_baixar;
    private javax.swing.JButton btn_gravarmodificacao;
    private javax.swing.JButton btn_novo;
    private javax.swing.JButton btn_sair;
    private javax.swing.JButton btn_salvar;
    private javax.swing.JButton btn_Último;
    private javax.swing.JComboBox<String> cb_fornecedor;
    private javax.swing.JComboBox<String> cb_tipoDespesa;
    private javax.swing.JCheckBox chb_pagamentoEfetuado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbl_DataCadastro;
    private javax.swing.JLabel lbl_Id;
    private javax.swing.JLabel lbl_codigodeBarras;
    private javax.swing.JLabel lbl_dataPagamento;
    private javax.swing.JLabel lbl_dataVencimento;
    private javax.swing.JLabel lbl_documento;
    private javax.swing.JLabel lbl_observacao;
    private javax.swing.JLabel lbl_pagamentoEfetuado;
    private javax.swing.JLabel lbl_parcela;
    private javax.swing.JLabel lbl_tipoDespesa;
    private javax.swing.JLabel lbl_tipodivida;
    private javax.swing.JLabel lbl_valor;
    private javax.swing.JRadioButton rb_boleto;
    private javax.swing.JRadioButton rb_cheque;
    private javax.swing.JScrollPane sp_observacao;
    private javax.swing.JTextArea ta_observacao;
    private javax.swing.JTextField tf_Id;
    private javax.swing.JTextField tf_codigodeBarras;
    private javax.swing.JTextField tf_dataCadastro;
    private javax.swing.JTextField tf_dataPagamento;
    private javax.swing.JTextField tf_dataVencimento;
    private javax.swing.JTextField tf_documento;
    private javax.swing.JTextField tf_fornecedor;
    private javax.swing.JTextField tf_parcela;
    private javax.swing.JTextField tf_tipoDespesa;
    private javax.swing.JTextField tf_valor;
    // End of variables declaration//GEN-END:variables
}
